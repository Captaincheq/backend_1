{"version":3,"sources":["Components/Navigation/Navigation.js","Components/Signin/Signin.js","Components/Register/Register.js","Components/Logo/Logo.js","Components/ImageLinkForm/ImageLinkForm.js","Components/Rank/Rank.js","Components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js","Components/Logo/logo.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","this","htmlFor","type","name","onChange","React","Component","Register","onNameChange","Logo","options","max","height","width","paddingTop","alt","src","logo","ImageLinkForm","onInputChange","onButtonSubmit","Rank","entries","FaceRecognition","imageUrl","box","heigh","top","topRow","right","leftCol","bottom","bottomRow","left","rightCol","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","particles","line_linked","shadow","enable","color","blur","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.6e136c8d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn }) => {\r\n\r\n        if(isSignedIn) {\r\n            return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick = {() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'> Sign Out</p>\r\n            </nav>\r\n            );\r\n    } else {\r\n        return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n            <p onClick = {() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'> Sign In</p>  \r\n            <p onClick = {() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'> Register</p>\r\n            </nav>\r\n\r\n        );\r\n    }\r\n\r\n}\r\nexport default Navigation;","import React from 'react';\r\n\r\nclass Signin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('https://blooming-taiga-07997.herokuapp.com/signin', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if(user.id){\r\n                  this.props.loadUser(user);\r\n                  this.props.onRouteChange('home');\r\n        }\r\n    })\r\n        \r\n    }\r\n\r\n    render() {\r\n        const {onRouteChange} = this.props;\r\n    return (\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n        <main className= \"pa4 black-80\">\r\n            <form className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                         type=\"email\" \r\n                         name=\"email-address\"\r\n                         id=\"email-address\"\r\n                         onChange={this.onEmailChange}\r\n                         />\r\n                         \r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"password\" \r\n                        name=\"password\" \r\n                         id=\"password\"\r\n                         onChange={this.onPasswordChange}\r\n                         />\r\n                         \r\n                    </div>\r\n                </fieldset>\r\n                <div className=\"\">\r\n                <input \r\n                onClick={this.onSubmitSignIn}\r\n                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                    type=\"submit\" \r\n                    value=\"Sign in\"/>\r\n                </div>\r\n                <div className=\"lh-copy mt3\">\r\n                <p onClick={() => onRouteChange('Register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                </div>\r\n            </form>\r\n        </main>\r\n        </article>\r\n   );\r\n\r\n}\r\n\r\n    \r\n}\r\nexport default Signin;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                email: '',\r\n                password: '',\r\n                name: ''\r\n            }\r\n        }\r\n\r\n        onNameChange = (event) => {\r\n            this.setState({name: event.target.value})\r\n        }\r\n    \r\n\r\n        onEmailChange = (event) => {\r\n            this.setState({email: event.target.value})\r\n        }\r\n    \r\n        onPasswordChange = (event) => {\r\n            this.setState({password: event.target.value})\r\n        }\r\n    \r\n        onSubmitSignIn = () => {\r\n            fetch('https://blooming-taiga-07997.herokuapp.com/register', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                \r\n                    email: this.state.email,\r\n                    password: this.state.password,\r\n                    name: this.state.name\r\n                })\r\n            })\r\n                .then(response => response.json())\r\n                .then(user => {\r\n                    //validation\r\n                    if(user.id) {\r\n                        this.props.loadUser(user)\r\n                        this.props.onRouteChange('home');\r\n            }\r\n        })\r\n            \r\n        }\r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n            <htmlForm className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f4 fw6 ph0 mh0\">Register</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"text\"\r\n                        name=\"name\" \r\n                        id=\"name\"\r\n                        onChange = {this.onNameChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"email\" \r\n                        name=\"email-address\"  \r\n                        id=\"email-address\"\r\n                        onChange = {this.onEmailChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"password\" \r\n                        name=\"password\"  \r\n                        id=\"password\"\r\n                        onChange = {this.onPasswordChange}\r\n                        />\r\n                    </div>\r\n                </fieldset>\r\n                <div className=\"\">\r\n                <input \r\n                onClick={this.onSubmitSignIn}\r\n                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                    type=\"submit\" \r\n                    value=\"Register\"/>\r\n                </div>\r\n            </htmlForm>\r\n        </main>\r\n        </article>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Register;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport logo from './logo.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 25 }} style={{ height: 100, width: 150 }} >\r\n            <div className=\"Tilt-inner  pa3\"> <img style= {{paddingTop: '5px'}} alt='Logo' src={logo}/></div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkform.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <div >\r\n            <p className='f3'>\r\n                {'This magic Brain will detect faces in your pictures /Give it a try'}\r\n            </p>\r\n            <div className= 'center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input className='fa4 pa2 w-70 center' type='tex' onChange={onInputChange}/>\r\n                    <button \r\n                    className='w-30 grow f4 link ph3 pv2 dib white bg-blue'\r\n                    onClick={onButtonSubmit}\r\n                     >Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({name, entries}) => {\r\n    return (\r\n        <div >\r\n          <div className='white f3'>\r\n          {`${name} , your current rank is...`}\r\n          </div>\r\n            <div className='white f1 '>\r\n             {entries}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\n\r\nconst FaceRecognition = ({ imageUrl, box}) => {\r\n    return (\r\n        <div className= 'center ma'>\r\n            <div className= 'absolute mt2'>\r\n                <img id='inputImage' alt='' src={ imageUrl } width='500px' heigh='auto'/>\r\n            <div className='bounding-box' style = {{top: box.topRow, right: box.leftCol, bottom: box.bottomRow, left: box.rightCol}}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default FaceRecognition;","import React, {Component} from 'react';\nimport Particles from 'react-particles-js'; \nimport Navigation from './Components/Navigation/Navigation';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\n\n\nconst initialState = {\n    input: '',\n    imageUrl: '',\n    box: {},\n    route: 'signin',\n    isSignedIn: false,\n    user: {\n      id: '',\n      name: '',\n      email: '',\n      entries: 0,\n      joined: ''\n    }\n  }\n\n\nclass App extends Component {\n  constructor() {\n   super();  \n   this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({ user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  const image = document.getElementById('inputImage');\n  const width = Number(image.width);\n  const height = Number(image.height);\n  \n  return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col * width),\n    bottomRow: height - (clarifaiFace.bottom_row * height)\n      }\n\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n        //now the clarifai call is now coming for the backend\n        // fetching image from the database.\n        fetch('https://blooming-taiga-07997.herokuapp.com/imageurl', {\n                         method: 'post',\n                         headers: {'Content-Type': 'application/json'},\n                         body: JSON.stringify({\n                           input: this.state.input\n                         })\n                       })\n                       .then(response => response.json())\n                     .then(response => {\n                       if(response) {\n                       fetch('https://blooming-taiga-07997.herokuapp.com/image', {\n                         method: 'put',\n                         headers: {'Content-Type': 'application/json'},\n                         body: JSON.stringify({\n                           id: this.state.user.id\n                         })\n                       })\n                       .then(response => response.json())\n                       .then(count => {\n                         this.setState(Object.assign(this.state.user, {entries: count}))\n                       })\n                       .catch(console.log)\n                     } \n                      this.displayFaceBox(this.calculateFaceLocation(response))\n                    })\n                       // do something with response\n  \n        .catch(err => console.log(err));\n  }\n\n\n\n\n onRouteChange = (route) => {\n   if (route === 'signout') {\n     this.setState(initialState)\n   } else if (route === 'home') {\n     this.setState({isSignedIn: true})\n   }\n  this.setState({route: route});\n }\n\n\n  render() {\n  return (\n    <div className=\"App\">\n     <Particles className = 'particles' \n              params={{\n            \t\tparticles: {\n            \t\t\tline_linked: {\n            \t\t\t\tshadow: {\n            \t\t\t\t\tenable: true,\n            \t\t\t\t\tcolor: \"#FFF91\",\n            \t\t\t\t\tblur: 10\n            \t\t\t\t}\n            \t\t\t}\n            \t\t}\n            \t}}\n      />\n\n      <Navigation isSignedIn={this.state.isSignedIn} onRouteChange = {this.onRouteChange}/>\n      { this.state.route === 'home'\n       ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/> \n            <ImageLinkForm onInputChange={this.onInputChange} \n                          onButtonSubmit={this.onButtonSubmit}/>\n          \n            <FaceRecognition box={this.state.box}  imageUrl= {this.state.imageUrl}/>\n         </div>\n         : (\n          this.state.route === 'signin'\n           ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} /> \n           : <Register loadUser = {this.loadUser} onRouteChange = {this.onRouteChange}/>\n          \n           )\n         \n       }\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.546c2eb8.png\";"],"sourceRoot":""}